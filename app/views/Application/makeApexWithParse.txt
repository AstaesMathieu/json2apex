//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//

public class ${className} {
	public static void consumeObject(JSONParser parser) {
		Integer depth = 0;
		do {
			JSONToken curr = parser.getCurrentToken();
			if (curr == JSONToken.START_OBJECT || 
				curr == JSONToken.START_ARRAY) {
				depth++;
			} else if (curr == JSONToken.END_OBJECT ||
				curr == JSONToken.END_ARRAY) {
				depth--;
			}
		} while (depth > 0 && parser.nextToken() != null);
	}

#{list items:classes, as:'cls'}
	public class ${cls} {
#{list items:cls.members.entrySet(), as:'m'}
		public ${m.value} ${m.key} {get;set;}
#{/list}

		public ${cls}(JSONParser parser) {
			while (parser.nextToken() != JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == JSONToken.FIELD_NAME) {
					String text = parser.getText();
					parser.nextToken();
					#{list items:cls.members.entrySet(), as:'m'}
if (text == '${m.key}') {
#{if m.value.toString() == 'String'}
						${m.key} = parser.getText();
#{/if}
#{elseif m.value.toString() == 'Integer'}
						${m.key} = parser.getIntegerValue();
#{/elseif}
#{elseif m.value.toString() == 'Double'}
						${m.key} = parser.getDoubleValue();
#{/elseif}
#{elseif m.value.toString() == 'Boolean'}
						${m.key} = parser.getBooleanValue();
#{/elseif}
#{elseif m.value.toString() == 'Long'}
						${m.key} = parser.getLongValue();
#{/elseif}
#{elseif m.value.toString() == 'Long'}
						${m.key} = parser.getLongValue();
#{/elseif}
#{elseif m.value.toString().startsWith('List<')}
						${m.key} = new ${m.value}();
						while (parser.nextToken() != JSONToken.END_ARRAY) {
							${m.key}.add(new ${m.value.itemType()}(parser));
						}
#{/elseif}
#{else}
						${m.key} = new ${m.value}(parser);
#{/else}
					} else #{/list}{
						System.debug(LoggingLevel.WARN, '${cls} consuming unrecognized property: '+text);
						consumeObject(parser);
					}
				}
			}
		}
	}
	
#{/list}
	
	public static ${root} parse(String json) {
		return new ${root}(System.JSON.createParser(json));
	}
	
	// This test method should give 100% coverage
	static testMethod void testParse() {
		String json = '${json.escapeApex()}';
		${root} r = parse(json);
		System.assert(r != null);
#{list items:classes, as:'cls'}

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		${cls} obj${cls} = new ${cls}(System.JSON.createParser(json));
		System.assert(obj${cls} != null);
#{list items:cls.members.entrySet(), as:'m'}
		System.assert(obj${cls}.${m.key} == null);
#{/list}
#{/list}
	}
}